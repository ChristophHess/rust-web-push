var N=null,E="",T="t",U="u",searchIndex={};
var R=["web_push","endpoint","The public key","webpushclient","webpusherror","webpushmessage","webpushresponse","subscriptioninfo","result","webpushmessagebuilder","vapidsignaturebuilder","vapidsignature","try_from","borrow_mut","try_into","type_id","erased_serialize","serializer","borrow","typeid","webpushpayload","formatter","serialize","deserialize","SubscriptionInfo","SubscriptionKeys","WebPushMessage","WebPushPayload","VapidSignature","WebPushError","ContentEncoding","WebPushClient","WebPushMessageBuilder","VapidSignatureBuilder","WebPushResponse"];

searchIndex[R[0]]={"doc":"Web Push","i":[[3,R[31],R[0],"An async client for sending the notification payload.",N,N],[3,R[34],E,"The response future. When successful, returns an empty…",N,N],[3,R[24],E,"Client info for sending the notification. Maps the values…",N,N],[12,R[1],E,"The endpoint URI for sending the notification.",0,N],[12,"keys",E,"The encryption key and secret for payload encryption.",0,N],[3,R[25],E,"Encryption keys from the client.",N,N],[12,"p256dh",E,R[2],1,N],[12,"auth",E,"Authentication secret",1,N],[3,R[26],E,"Everything needed to send a push notification to the user.",N,N],[12,"gcm_key",E,"When not using VAPID, certain browsers need a Firebase…",2,N],[12,R[1],E,"The endpoint URI where to send the payload.",2,N],[12,"ttl",E,"Time to live, how long the message should wait in the…",2,N],[12,"payload",E,"The encrypted request payload, if sending any data.",2,N],[12,"service",E,"The service type where to connect. Firebase when not using…",2,N],[3,R[32],E,"The main class for creating a notification payload.",N,N],[3,R[27],E,"The push content payload, already in an encrypted form.",N,N],[12,"content",E,"Encrypted content data.",3,N],[12,"crypto_headers",E,"Headers depending on the authorization scheme and…",3,N],[12,"content_encoding",E,"The encryption standard.",3,N],[3,R[28],E,"A struct representing a VAPID signature. Should be…",N,N],[12,"auth_t",E,"The signature",4,N],[12,"auth_k",E,R[2],4,N],[3,R[33],E,"A VAPID signature builder for generating an optional…",N,N],[4,R[29],E,E,N,N],[13,"Unspecified",E,"An unknown error happened encrypting the message,",5,N],[13,"Unauthorized",E,"Please provide valid credentials to send the notification",5,N],[13,"BadRequest",E,"Request was badly formed",5,N],[13,"ServerError",E,"Contains an optional `Duration`, until the user can retry…",5,N],[13,"NotImplemented",E,"The feature is not implemented yet",5,N],[13,"InvalidUri",E,"The provided URI is invalid",5,N],[13,"TimeoutError",E,"The request timed out",5,N],[13,"EndpointNotValid",E,"The URL specified is no longer valid and should no longer…",5,N],[13,"EndpointNotFound",E,"The URL specified is invalid and should not be used again",5,N],[13,"PayloadTooLarge",E,"Maximum allowed payload size is 3800 characters",5,N],[13,"TlsError",E,"Could not initialize a TLS connection",5,N],[13,"SslError",E,"Error in SSL signing",5,N],[13,"IoError",E,"Error in reading a file",5,N],[13,"InvalidPackageName",E,"Make sure the message was addressed to a registration…",5,N],[13,"InvalidTtl",E,"The TTL value provided was not valid or was not provided",5,N],[13,"MissingCryptoKeys",E,"The request was missing required crypto keys",5,N],[13,"InvalidCryptoKeys",E,"One or more of the crypto key elements are invalid.",5,N],[13,"InvalidResponse",E,"Corrupted response data",5,N],[13,"Other",E,E,5,N],[4,R[30],E,E,N,N],[13,"AesGcm",E,E,6,N],[13,"Aes128Gcm",E,E,6,N],[11,"new",E,E,7,[[],[[R[3]],[R[8],[R[3],R[4]]],[R[4]]]]],[11,"send",E,"Sends a notification. Never times out.",7,[[[R[5]],["self"]],[R[6]]]],[11,"send_with_timeout",E,"Sends a notification with a timeout. Triggers…",7,[[[R[5]],["self"],["duration"]],[["timeout",[R[6]]],[R[6]]]]],[11,"short_description",E,E,5,[[["self"]],["str"]]],[11,"new",E,"A constructor function to create a new `SubscriptionInfo`,…",0,[[["s"]],[R[7]]]],[11,"new",E,"Creates a builder for generating the web push payload.",8,[[[R[7]]],[[R[8],[R[9],R[4]]],[R[9]],[R[4]]]]],[11,"set_ttl",E,"How long the server should keep the message if it cannot…",8,[[["u32"],["self"]]]],[11,"set_gcm_key",E,"For Google's push service, one must provide an API key…",8,[[["str"],["self"]]]],[11,"set_vapid_signature",E,"Add a VAPID signature to the request. To be generated with…",8,[[[R[11]],["self"]]]],[11,"set_payload",E,"If set, the client will get content in the notification.…",8,[[["self"],["contentencoding"]]]],[11,"build",E,"Builds and if set, encrypts the payload. Any errors will…",8,[[],[[R[8],[R[5],R[4]]],[R[5]],[R[4]]]]],[11,"from_pem",E,"Creates a new builder from a PEM formatted private key.",9,[[[R[7]],["read"]],[[R[10]],[R[8],[R[10],R[4]]],[R[4]]]]],[11,"from_der",E,"Creates a new builder from a DER formatted private key.",9,[[[R[7]],["read"]],[[R[10]],[R[8],[R[10],R[4]]],[R[4]]]]],[11,"add_claim",E,"Add a claim to the signature. Claims `aud` and `exp` are…",9,[[["str"],["self"],["v"]]]],[11,"build",E,"Builds a signature to be used in WebPushMessageBuilder.",9,[[],[[R[11]],[R[8],[R[11],R[4]]],[R[4]]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[8]]]],[11,R[18],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[19]]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[8]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[8]]]],[11,R[18],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[19]]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[8]]]],[11,"into_future",E,E,10,[[],["f"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[8]]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[19]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[8]]]],[11,R[16],E,E,0,[[["self"],[R[17]]],[["error"],["ok"],[R[8],["ok","error"]]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[8]]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[19]]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[8]]]],[11,R[16],E,E,1,[[["self"],[R[17]]],[["error"],["ok"],[R[8],["ok","error"]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[8]]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[19]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[8]]]],[11,R[18],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[19]]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[8]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[8]]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[19]]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[8]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[8]]]],[11,R[18],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[19]]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[8]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[8]]]],[11,R[18],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[19]]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[8]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,"to_string",E,E,5,[[["self"]],["string"]]],[11,R[12],E,E,5,[[[U]],[R[8]]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[19]]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[8]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[8]]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[19]]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[8]]]],[11,"eq",E,E,5,[[[R[4]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[4]],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[20]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[20]]],["bool"]]],[11,"from",E,E,5,[[["jsonerror"]],[R[4]]]],[11,"from",E,E,5,[[["fromutf8error"]],[R[4]]]],[11,"from",E,E,5,[[["invaliduri"]],[R[4]]]],[11,"from",E,E,5,[[["timeouterror",[R[6]]],[R[6]]],[R[4]]]],[11,"from",E,E,5,[[["unspecified"]],[R[4]]]],[11,"from",E,E,5,[[["error"]],[R[4]]]],[11,"from",E,E,5,[[["ioerror"]],[R[4]]]],[11,"from",E,E,5,[[["errorstack"]],[R[4]]]],[11,"from",E,E,5,[[["decodeerror"]],[R[4]]]],[11,"fmt",E,E,10,[[[R[21]],["self"]],[R[8]]]],[11,"fmt",E,E,5,[[[R[21]],["self"]],[R[8]]]],[11,"fmt",E,E,1,[[[R[21]],["self"]],[R[8]]]],[11,"fmt",E,E,0,[[[R[21]],["self"]],[R[8]]]],[11,"fmt",E,E,3,[[[R[21]],["self"]],[R[8]]]],[11,"fmt",E,E,2,[[[R[21]],["self"]],[R[8]]]],[11,"fmt",E,E,4,[[[R[21]],["self"]],[R[8]]]],[11,"fmt",E,E,5,[[[R[21]],["self"]],[R[8]]]],[11,"description",E,E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[["option",["error"]],["error"]]]],[11,R[22],E,E,1,[[["__s"],["self"]],[R[8]]]],[11,R[22],E,E,0,[[["__s"],["self"]],[R[8]]]],[11,R[23],E,E,1,[[["__d"]],[R[8]]]],[11,R[23],E,E,0,[[["__d"]],[R[8]]]],[11,"poll",E,E,10,[[["self"]],["poll"]]],[11,"call",E,E,7,[[["self"]]]]],"p":[[3,R[24]],[3,R[25]],[3,R[26]],[3,R[27]],[3,R[28]],[4,R[29]],[4,R[30]],[3,R[31]],[3,R[32]],[3,R[33]],[3,R[34]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);