var N = null;var searchIndex = {};
searchIndex["web_push"]={"doc":"Web Push","items":[[3,"WebPushResponse","web_push","The response future. When successful, returns an empty `Unit` for failures gives a WebPushError.",N,N],[3,"WebPushClient","","An async client for sending the notification payload.",N,N],[3,"WebPushMessage","","Everything needed to send a push notification to the user.",N,N],[12,"gcm_key","","When not using VAPID, certain browsers need a Firebase account key for sending a notification.",0,N],[12,"endpoint","","The endpoint URI where to send the payload.",0,N],[12,"ttl","","Time to live, how long the message should wait in the server if user is not online. Some services require this value to be set.",0,N],[12,"payload","","The encrypted request payload, if sending any data.",0,N],[12,"service","","The service type where to connect. Firebase when not using VAPID with Chrome-based browsers. Data is in JSON format instead of binary.",0,N],[3,"WebPushMessageBuilder","","The main class for creating a notification payload.",N,N],[3,"WebPushPayload","","The push content payload, already in an encrypted form.",N,N],[12,"content","","Encrypted content data.",1,N],[12,"crypto_headers","","Headers depending on the authorization scheme and encryption standard.",1,N],[12,"content_encoding","","The encryption standard.",1,N],[3,"SubscriptionInfo","","Client info for sending the notification. Maps the values from browser's subscription info JSON data.",N,N],[12,"endpoint","","The endpoint URI for sending the notification.",2,N],[12,"keys","","The encryption key and secret for payload encryption.",2,N],[3,"SubscriptionKeys","","Encryption keys from the client.",N,N],[12,"p256dh","","The public key",3,N],[12,"auth","","Authentication secret",3,N],[3,"VapidSignature","","A struct representing a VAPID signature. Should be generated using the VapidSignatureBuilder.",N,N],[12,"auth_t","","The signature",4,N],[12,"auth_k","","The public key",4,N],[3,"VapidSignatureBuilder","","A VAPID signature builder for generating an optional signature to the request. With a given signature, one can pass the registration to Google's FCM service. And prevent unauthorized notifications to be sent to the client.",N,N],[4,"WebPushError","","",N,N],[13,"Unspecified","","An unknown error happened encrypting the message,",5,N],[13,"Unauthorized","","Please provide valid credentials to send the notification",5,N],[13,"BadRequest","","Request was badly formed",5,N],[13,"ServerError","","Contains an optional `Duration`, until the user can retry the request",5,N],[13,"NotImplemented","","The feature is not implemented yet",5,N],[13,"InvalidUri","","The provided URI is invalid",5,N],[13,"TimeoutError","","The request timed out",5,N],[13,"EndpointNotValid","","The URL specified is no longer valid and should no longer be used",5,N],[13,"EndpointNotFound","","The URL specified is invalid and should not be used again",5,N],[13,"PayloadTooLarge","","Maximum allowed payload size is 3800 characters",5,N],[13,"TlsError","","Could not initialize a TLS connection",5,N],[13,"SslError","","Error in SSL signing",5,N],[13,"IoError","","Error in reading a file",5,N],[13,"InvalidPackageName","","Make sure the message was addressed to a registration token whose package name matches the value passed in the request (Google).",5,N],[13,"InvalidTtl","","The TTL value provided was not valid or was not provided",5,N],[13,"MissingCryptoKeys","","The request was missing required crypto keys",5,N],[13,"InvalidCryptoKeys","","One or more of the crypto key elements are invalid.",5,N],[13,"InvalidResponse","","Corrupted response data",5,N],[13,"Other","","",5,N],[4,"ContentEncoding","","",N,N],[13,"AesGcm","","",6,N],[13,"Aes128Gcm","","",6,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"poll","","",7,[[["self"]],["poll"]]],[11,"new","","",8,[[],["result",["webpushclient","webpusherror"]]]],[11,"send","","Sends a notification. Never times out.",8,[[["self"],["webpushmessage"]],["webpushresponse"]]],[11,"send_with_timeout","","Sends a notification with a timeout. Triggers `WebPushError::TimeoutError` if the request takes too long.",8,[[["self"],["webpushmessage"],["duration"]],["timeout",["webpushresponse"]]]],[11,"call","","",8,N],[11,"eq","","",5,[[["self"],["webpusherror"]],["bool"]]],[11,"ne","","",5,[[["self"],["webpusherror"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"from","","",5,[[["jsonerror"]],["webpusherror"]]],[11,"from","","",5,[[["fromutf8error"]],["webpusherror"]]],[11,"from","","",5,[[["invaliduri"]],["webpusherror"]]],[11,"from","","",5,[[["timeouterror",["webpushresponse"]]],["webpusherror"]]],[11,"from","","",5,[[["unspecified"]],["webpusherror"]]],[11,"from","","",5,[[["error"]],["webpusherror"]]],[11,"from","","",5,[[["ioerror"]],["webpusherror"]]],[11,"from","","",5,[[["errorstack"]],["webpusherror"]]],[11,"from","","",5,[[["decodeerror"]],["webpusherror"]]],[11,"short_description","","",5,[[["self"]],["str"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"new","","A constructor function to create a new `SubscriptionInfo`, if not using Serde's serialization.",2,[[["s"],["s"],["s"]],["subscriptioninfo"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["webpushpayload"]],["bool"]]],[11,"ne","","",1,[[["self"],["webpushpayload"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a builder for generating the web push payload.",9,[[["subscriptioninfo"]],["result",["webpushmessagebuilder","webpusherror"]]]],[11,"set_ttl","","How long the server should keep the message if it cannot be delivered currently. If not set, the message is deleted immediately on failed delivery.",9,[[["self"],["u32"]]]],[11,"set_gcm_key","","For Google's push service, one must provide an API key from Firebase console.",9,[[["self"],["str"]]]],[11,"set_vapid_signature","","Add a VAPID signature to the request. To be generated with the VapidSignatureBuilder.",9,[[["self"],["vapidsignature"]]]],[11,"set_payload","","If set, the client will get content in the notification. Has a maximum size of 3800 characters.",9,N],[11,"build","","Builds and if set, encrypts the payload. Any errors will be `Undefined`, meaning something was wrong in the given public key or authentication.",9,[[["self"]],["result",["webpushmessage","webpusherror"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from_pem","","Creates a new builder from a PEM formatted private key.",10,[[["r"],["subscriptioninfo"]],["result",["vapidsignaturebuilder","webpusherror"]]]],[11,"from_der","","Creates a new builder from a DER formatted private key.",10,[[["r"],["subscriptioninfo"]],["result",["vapidsignaturebuilder","webpusherror"]]]],[11,"add_claim","","Add a claim to the signature. Claims `aud` and `exp` are automatically added to the signature. Add them manually to override the default values.",10,[[["self"],["str"],["v"]]]],[11,"build","","Builds a signature to be used in WebPushMessageBuilder.",10,[[["self"]],["result",["vapidsignature","webpusherror"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"erased_serialize","","",2,[[["self"],["serializer"]],["result",["ok","error"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"erased_serialize","","",3,[[["self"],["serializer"]],["result",["ok","error"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]]],"paths":[[3,"WebPushMessage"],[3,"WebPushPayload"],[3,"SubscriptionInfo"],[3,"SubscriptionKeys"],[3,"VapidSignature"],[4,"WebPushError"],[4,"ContentEncoding"],[3,"WebPushResponse"],[3,"WebPushClient"],[3,"WebPushMessageBuilder"],[3,"VapidSignatureBuilder"]]};
initSearch(searchIndex);
